{"mappings":"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","sources":["<anon>","src/index.js"],"sourcesContent":["// index.js\n// Modal\nconst modal = document.getElementById(\"myModal\");\nconst playAgainBtn = document.getElementById(\"playAgainBtn\");\nconst closeBtn = document.querySelector(\".close\");\nconst pet = document.getElementById(\"pet\");\nconst poop = document.getElementById(\"poop\");\nconst healthDisplay = document.getElementById(\"health\");\nconst feelingsDisplay = document.getElementById(\"feelings\");\nconst hungryStatus = document.getElementById(\"hungry\");\nconst sleepyStatus = document.getElementById(\"sleepy\");\nconst sadStatus = document.getElementById(\"sad\");\nconst sickStatus = document.getElementById(\"sick\");\nconst feedBtn = document.getElementById(\"feedBtn\");\nconst singBtn = document.getElementById(\"singBtn\");\nconst playBtn = document.getElementById(\"playBtn\");\nconst cleanBtn = document.getElementById(\"cleanBtn\");\nfeedBtn.addEventListener(\"click\", ()=>{\n    decreaseHungry();\n});\nsingBtn.addEventListener(\"click\", ()=>{\n    decreaseSleepy();\n});\nplayBtn.addEventListener(\"click\", ()=>{\n    decreaseSad();\n});\ncleanBtn.addEventListener(\"click\", ()=>{\n    cleanPet();\n});\nlet health = 100;\nlet hungry = 0;\nlet sleepy = 0;\nlet sad = 0;\nlet sick = 0;\nlet isPoop = false;\nlet feelings = [];\n// Health functions\nfunction increaseHealth() {\n    if (hungry < 100 && sleepy < 100 && sad < 100 && sick < 100 && health < 100) {\n        health += 1;\n        updateHealth();\n    }\n}\nfunction decreaseHealth() {\n    if (health > 0) {\n        if (hungry === 100 || sleepy === 100 || sad === 100 || sick === 100) {\n            health -= 1;\n            updateHealth();\n        }\n    }\n}\nfunction updateHealth() {\n    healthDisplay.textContent = health;\n    const healthBar = document.getElementById(\"health\");\n    const healthPercentage = health / 100 * 100;\n    healthBar.style.width = healthPercentage + \"%\";\n}\n// Feelings Display\nfunction updateFeelings() {\n    feelings = [];\n    if (hungry >= 5) feelings.push(\"Hungry\");\n    if (sleepy >= 5) feelings.push(\"Sleepy\");\n    if (sad >= 5) feelings.push(\"Sad\");\n    if (sick >= 5) feelings.push(\"Sick\");\n    if (health === 0) {\n        feelings = [\n            \"Dead!\"\n        ];\n        showModal();\n    } else if (feelings.length === 0) feelings.push(\"Okay\");\n    feelingsDisplay.textContent = feelings.join(\", \");\n}\n// Hungry functions\nfunction increaseHungry() {\n    if (hungry < 100) {\n        hungry += 1;\n        updateHungry();\n    }\n}\nfunction decreaseHungry() {\n    if (hungry > 0 && hungry <= 100) {\n        hungry -= 20;\n        updateHungry();\n    }\n}\nfunction updateHungry() {\n    hungryStatus.textContent = hungry;\n}\n// Sleepy functions\nfunction increaseSleepy() {\n    if (sleepy < 100) {\n        sleepy += 1;\n        updateSleepy();\n    }\n}\nfunction decreaseSleepy() {\n    if (sleepy > 0 && sleepy <= 100) {\n        sleepy -= 20;\n        updateSleepy();\n    }\n}\nfunction updateSleepy() {\n    sleepyStatus.textContent = sleepy;\n}\n// Sad functions\nfunction increaseSad() {\n    if (sad < 100) {\n        sad += 1;\n        updateSad();\n    }\n}\nfunction decreaseSad() {\n    if (sad > 0 && sad <= 100) {\n        sad -= 20;\n        updateSad();\n    }\n}\nfunction updateSad() {\n    sadStatus.textContent = sad;\n}\n// Poop/Cleen functions\nfunction cleanPet() {\n    isPoop = false;\n    updatePoop();\n}\nfunction poopPet() {\n    isPoop = true;\n    updatePoop();\n}\nfunction updatePoop() {\n    if (isPoop) poop.style.backgroundColor = \"burlywood\";\n    else poop.style.backgroundColor = \"white\";\n}\n// Sick functions\nfunction increaseSick() {\n    if (sick < 100) {\n        sick += 1;\n        updateSick();\n    }\n}\nfunction decreaseSick() {\n    if (sick > 0 && sick <= 100) {\n        sick -= 1;\n        updateSick();\n    }\n}\nfunction updateSick() {\n    sickStatus.textContent = sick;\n}\n// Death\nfunction dead() {\n    if (health === 0) {\n        feelings = [\n            \"Dead!\"\n        ];\n        updateFeelings();\n        showModal();\n    }\n}\n// Set intervals\n// setInterval(increaseHungry, 1000);\n// setInterval(increaseSleepy, 1000);\n// setInterval(increaseSad, 1000);\nsetInterval(()=>{\n    increaseHealth();\n    decreaseHealth();\n    updateFeelings();\n    increaseHungry();\n    increaseSleepy();\n    increaseSad();\n    checkFeelings();\n    if (isPoop) increaseSick();\n    else decreaseSick();\n}, 100);\nsetInterval(()=>{\n    poopPet();\n}, 10000);\nfunction showModal() {\n    modal.style.display = \"flex\"; // Display the modal\n}\nplayAgainBtn.addEventListener(\"click\", ()=>{\n    modal.style.display = \"none\"; // Hide the modal\n    // Reset pet state here if needed\n    resetPetState();\n});\nfunction resetPetState() {\n    // Reset pet's health and other attributes to restart the game\n    health = 100;\n    hungry = 0;\n    sleepy = 0;\n    sad = 0;\n    sick = 0;\n    isPoop = false;\n    feelings = [];\n    updateFeelings();\n    updateHealth();\n    updateHungry();\n    updateSleepy();\n    updateSad();\n    updateSick();\n    updatePoop();\n    pet.style.backgroundColor = \"green\"; // Reset pet's color\n}\n// Generate feelings\nfunction checkFeelings() {\n    // if (hungry >= 5 || sleepy >= 5 || sad >= 5) {\n    //   // At least one feeling has reached a threshold, so change pet color\n    //   pet.style.backgroundColor = 'red';\n    // } else {\n    //   // No feeling has reached a threshold, so keep pet color green\n    //   pet.style.backgroundColor = 'green';\n    // }\n    if (hungry >= 5) pet.style.backgroundColor = \"red\";\n    else if (sleepy >= 5) pet.style.backgroundColor = \"orange\";\n    else if (sad >= 5) pet.style.backgroundColor = \"blue\";\n    else if (sick >= 5) pet.style.backgroundColor = \"yellowgreen\";\n    else pet.style.backgroundColor = \"rosybrown\";\n}\nconst progressBar = document.getElementById(\"healthBar\");\nsetInterval(()=>{\n    const computedStyle = getComputedStyle(progressBar);\n    const width = parseFloat(computedStyle.getPropertyValue(\"--width\")) || 0;\n    progressBar.style.setProperty(\"--width\", width + 0.1);\n}, 5);\n\n//# sourceMappingURL=index.2a03f64d.js.map\n","// index.js\r\n// Modal\r\nconst modal = document.getElementById(\"myModal\");\r\nconst playAgainBtn = document.getElementById(\"playAgainBtn\");\r\nconst closeBtn = document.querySelector(\".close\");\r\n\r\nconst pet = document.getElementById(\"pet\");\r\nconst poop = document.getElementById(\"poop\");\r\n\r\nconst healthDisplay = document.getElementById(\"health\");\r\nconst feelingsDisplay = document.getElementById(\"feelings\");\r\nconst hungryStatus = document.getElementById(\"hungry\");\r\nconst sleepyStatus = document.getElementById(\"sleepy\");\r\nconst sadStatus = document.getElementById(\"sad\");\r\nconst sickStatus = document.getElementById(\"sick\");\r\n\r\nconst feedBtn = document.getElementById(\"feedBtn\");\r\nconst singBtn = document.getElementById(\"singBtn\");\r\nconst playBtn = document.getElementById(\"playBtn\");\r\nconst cleanBtn = document.getElementById(\"cleanBtn\");\r\n\r\nfeedBtn.addEventListener(\"click\", () => {\r\n  decreaseHungry();\r\n});\r\nsingBtn.addEventListener(\"click\", () => {\r\n  decreaseSleepy();\r\n});\r\nplayBtn.addEventListener(\"click\", () => {\r\n  decreaseSad();\r\n});\r\ncleanBtn.addEventListener(\"click\", () => {\r\n  cleanPet();\r\n});\r\n\r\nlet health = 100;\r\nlet hungry = 0;\r\nlet sleepy = 0;\r\nlet sad = 0;\r\nlet sick = 0;\r\nlet isPoop = false;\r\nlet feelings = [];\r\n\r\n// Health functions\r\nfunction increaseHealth() {\r\n  if (hungry < 100 && sleepy < 100 && sad < 100 && sick < 100 && health < 100) {\r\n    health += 1;\r\n    updateHealth();\r\n  }\r\n}\r\n\r\nfunction decreaseHealth() {\r\n  if (health > 0) {\r\n    if (hungry === 100 || sleepy === 100 || sad === 100 || sick === 100) {\r\n      health -= 1;\r\n      updateHealth();\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateHealth() {\r\n  healthDisplay.textContent = health;\r\n  const healthBar = document.getElementById(\"health\");\r\n  const healthPercentage = (health / 100) * 100;\r\n  healthBar.style.width = healthPercentage + \"%\";\r\n}\r\n\r\n// Feelings Display\r\nfunction updateFeelings() {\r\n  feelings = [];\r\n\r\n  if (hungry >= 5) {\r\n    feelings.push(\"Hungry\");\r\n  }\r\n  if (sleepy >= 5) {\r\n    feelings.push(\"Sleepy\");\r\n  }\r\n  if (sad >= 5) {\r\n    feelings.push(\"Sad\");\r\n  }\r\n  if (sick >= 5) {\r\n    feelings.push(\"Sick\");\r\n  }\r\n\r\n  if (health === 0) {\r\n    feelings = [\"Dead!\"];\r\n    showModal();\r\n  } else if (feelings.length === 0) {\r\n    feelings.push(\"Okay\");\r\n  }\r\n\r\n  feelingsDisplay.textContent = feelings.join(\", \");\r\n}\r\n\r\n// Hungry functions\r\nfunction increaseHungry() {\r\n  if (hungry < 100) {\r\n    hungry += 1;\r\n    updateHungry();\r\n  }\r\n}\r\n\r\nfunction decreaseHungry() {\r\n  if (hungry > 0 && hungry <= 100) {\r\n    hungry -= 20;\r\n    updateHungry();\r\n  }\r\n}\r\n\r\nfunction updateHungry() {\r\n  hungryStatus.textContent = hungry;\r\n}\r\n\r\n// Sleepy functions\r\nfunction increaseSleepy() {\r\n  if (sleepy < 100) {\r\n    sleepy += 1;\r\n    updateSleepy();\r\n  }\r\n}\r\n\r\nfunction decreaseSleepy() {\r\n  if (sleepy > 0 && sleepy <= 100) {\r\n    sleepy -= 20;\r\n    updateSleepy();\r\n  }\r\n}\r\n\r\nfunction updateSleepy() {\r\n  sleepyStatus.textContent = sleepy;\r\n}\r\n\r\n// Sad functions\r\nfunction increaseSad() {\r\n  if (sad < 100) {\r\n    sad += 1;\r\n    updateSad();\r\n  }\r\n}\r\n\r\nfunction decreaseSad() {\r\n  if (sad > 0 && sad <= 100) {\r\n    sad -= 20;\r\n    updateSad();\r\n  }\r\n}\r\n\r\nfunction updateSad() {\r\n  sadStatus.textContent = sad;\r\n}\r\n\r\n// Poop/Cleen functions\r\n\r\nfunction cleanPet() {\r\n  isPoop = false;\r\n  updatePoop();\r\n}\r\n\r\nfunction poopPet() {\r\n  isPoop = true;\r\n  updatePoop();\r\n}\r\n\r\nfunction updatePoop() {\r\n  if (isPoop) {\r\n    poop.style.backgroundColor = \"burlywood\";\r\n  } else {\r\n    poop.style.backgroundColor = \"white\";\r\n  }\r\n}\r\n\r\n// Sick functions\r\nfunction increaseSick() {\r\n  if (sick < 100) {\r\n    sick += 1;\r\n    updateSick();\r\n  }\r\n}\r\n\r\nfunction decreaseSick() {\r\n  if (sick > 0 && sick <= 100) {\r\n    sick -= 1;\r\n    updateSick();\r\n  }\r\n}\r\n\r\nfunction updateSick() {\r\n  sickStatus.textContent = sick;\r\n}\r\n\r\n// Death\r\n\r\nfunction dead() {\r\n  if (health === 0) {\r\n    feelings = [\"Dead!\"];\r\n    updateFeelings();\r\n    showModal();\r\n  }\r\n}\r\n\r\n// Set intervals\r\n// setInterval(increaseHungry, 1000);\r\n// setInterval(increaseSleepy, 1000);\r\n// setInterval(increaseSad, 1000);\r\nsetInterval(() => {\r\n  increaseHealth();\r\n  decreaseHealth();\r\n  updateFeelings();\r\n  increaseHungry();\r\n  increaseSleepy();\r\n  increaseSad();\r\n  checkFeelings();\r\n  if (isPoop) {\r\n    increaseSick();\r\n  } else {\r\n    decreaseSick();\r\n  }\r\n}, 100);\r\n\r\nsetInterval(() => {\r\n  poopPet();\r\n}, 10000);\r\n\r\nfunction showModal() {\r\n  modal.style.display = \"flex\"; // Display the modal\r\n}\r\n\r\nplayAgainBtn.addEventListener(\"click\", () => {\r\n  modal.style.display = \"none\"; // Hide the modal\r\n  // Reset pet state here if needed\r\n  resetPetState();\r\n});\r\n\r\nfunction resetPetState() {\r\n  // Reset pet's health and other attributes to restart the game\r\n  health = 100;\r\n  hungry = 0;\r\n  sleepy = 0;\r\n  sad = 0;\r\n  sick = 0;\r\n  isPoop = false;\r\n  feelings = [];\r\n  updateFeelings();\r\n  updateHealth();\r\n  updateHungry();\r\n  updateSleepy();\r\n  updateSad();\r\n  updateSick();\r\n  updatePoop();\r\n  pet.style.backgroundColor = \"green\"; // Reset pet's color\r\n}\r\n\r\n// Generate feelings\r\nfunction checkFeelings() {\r\n  // if (hungry >= 5 || sleepy >= 5 || sad >= 5) {\r\n  //   // At least one feeling has reached a threshold, so change pet color\r\n  //   pet.style.backgroundColor = 'red';\r\n  // } else {\r\n  //   // No feeling has reached a threshold, so keep pet color green\r\n  //   pet.style.backgroundColor = 'green';\r\n  // }\r\n\r\n  if (hungry >= 5) {\r\n    pet.style.backgroundColor = \"red\";\r\n  } else if (sleepy >= 5) {\r\n    pet.style.backgroundColor = \"orange\";\r\n  } else if (sad >= 5) {\r\n    pet.style.backgroundColor = \"blue\";\r\n  } else if (sick >= 5) {\r\n    pet.style.backgroundColor = \"yellowgreen\";\r\n  } else {\r\n    pet.style.backgroundColor = \"rosybrown\";\r\n  }\r\n}\r\n\r\nconst progressBar = document.getElementById(\"healthBar\");\r\n\r\nsetInterval(() => {\r\n  const computedStyle = getComputedStyle(progressBar);\r\n  const width = parseFloat(computedStyle.getPropertyValue(\"--width\")) || 0;\r\n  progressBar.style.setProperty(\"--width\", width + 0.1);\r\n}, 5);\r\n"],"names":["modal","document","getElementById","playAgainBtn","querySelector","pet","poop","healthDisplay","feelingsDisplay","hungryStatus","sleepyStatus","sadStatus","sickStatus","feedBtn","singBtn","playBtn","cleanBtn","addEventListener","hungry","updateHungry","sleepy","updateSleepy","sad","updateSad","isPoop","updatePoop","health","sick","feelings","updateHealth","textContent","healthBar","healthPercentage","style","width","updateFeelings","push","display","length","join","backgroundColor","updateSick","setInterval","progressBar","computedStyle","getComputedStyle","parseFloat","getPropertyValue","setProperty"],"version":3,"file":"index.2a03f64d.js.map"}